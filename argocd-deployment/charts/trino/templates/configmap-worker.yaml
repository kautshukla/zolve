apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-worker
  labels:
    app: trino
    chart: trino-0.14.0
    release: trino
    heritage: Helm
    component: worker
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    -XX:+UnlockDiagnosticVMOptions
    # Reduce starvation of threads by GClocker, recommend to set about the number of cpu cores (JDK-8192647)
    -XX:GCLockerRetryAllocationCount=32
    -Dhive.file-system.cache.base-directory=/tmp/trino-cache

  config.properties: |
    coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    discovery.uri=http://trino:8080
    http-server.process-forwarded=true
    http-server.https.enabled=false

  exchange-manager.properties: |
    exchange-manager.name=filesystem
    
    exchange.base-directories=/tmp/trino-local-file-system-exchange-manager

  log.properties: |
    io.trino=INFO
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-schemas-volume-worker
  labels:
    helm.sh/chart: trino-0.14.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: trino
    app.kubernetes.io/version: "432"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
data: