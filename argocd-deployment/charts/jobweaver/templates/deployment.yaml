{{- if .Values.global.deploy.jobweaver }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobweaver
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.global.service.jobweaver.app.replicas | default .Values.global.service.replicas }} 
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jobweaver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jobweaver
    spec:
      terminationGracePeriodSeconds: {{ .Values.global.service.terminationGracePeriodSeconds | default 30 }}
      affinity:
        {{- toYaml (default .Values.global.service.affinity .Values.global.service.jobweaver.app.affinity) | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.global.service.nodeSelector | nindent 8 }}
      {{- with .Values.global.service.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if index .Values.global.service .Chart.Name "dependencies" }}
      initContainers:
        {{- range $depName, $dep := index .Values.global.service .Chart.Name "dependencies" }}
        - name: wait-for-{{ $depName }}
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z -w 2 {{ $dep.host | default (printf "%s.%s.svc.cluster.local" $depName $.Release.Namespace) }} {{ $dep.port }}; do
                echo "Waiting for {{ $depName }} to be ready..."
                sleep 2
              done
              echo "{{ $depName }} is ready!"
          resources:
            requests:
              cpu: "10m"
              memory: "16Mi"
            limits:
              cpu: "50m"
              memory: "32Mi"
        {{- end }}
      {{- end }}
      containers:
        - name: jobweaver
          image: {{ .Values.global.service.jobweaver.app.image }}:{{ .Values.global.service.jobweaver.app.tag | default .Values.global.service.tag | default "latest" }}
          imagePullPolicy: {{ .Values.global.service.jobweaver.app.pullPolicy | default .Values.global.service.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.global.service.jobweaver.app.port | default 80 }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ .Values.global.service.secretName | quote }}
          resources:
            {{- toYaml .Values.global.service.jobweaver.app.resources | default .Values.global.service.resources | nindent 12 }}
          volumeMounts:
            - name: git-sync
              mountPath: {{ .Values.global.service.jobweaver.app.gitSync.volumeRepoPath }}
              readOnly: true
            - name: dbt-logs-volume
              mountPath: {{ .Values.global.service.jobweaver.app.dbt.dbtDocsLogDir }}
            - name: dbt-artifacts
              mountPath: {{ .Values.global.service.jobweaver.app.dbt.dbtArtifactsDir }}
        - name: dbt
          image: {{ .Values.global.service.jobweaver.sidecars.dbt.image }}:{{ .Values.global.service.jobweaver.sidecars.dbt.tag | default .Values.global.service.tag | default "latest" }}
          imagePullPolicy: {{ .Values.global.service.jobweaver.sidecars.dbt.pullPolicy | default .Values.global.service.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.global.service.jobweaver.app.dbt.lineagePort | default 8080 }}
              protocol: TCP
              name: lineage
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "dbt pod running"
              /etc/dbtentrypoint.sh
              tail -f /dev/null
          stdin: true
          tty: true
          envFrom:
            - secretRef:
                name: {{ .Values.global.service.secretName | quote }}
          resources:
            {{- toYaml .Values.global.service.jobweaver.app.resources | default .Values.global.service.resources | nindent 12 }}
          volumeMounts:
            - name: git-sync
              mountPath: {{ .Values.global.service.jobweaver.app.gitSync.volumeRepoPath }}
            - name: dbt-logs-volume
              mountPath: {{ .Values.global.service.jobweaver.app.dbt.dbtDocsLogDir }}
            - name: dbt-artifacts
              mountPath: {{ .Values.global.service.jobweaver.app.dbt.dbtArtifactsDir }}
        - name: git-sync
          image: {{ .Values.global.service.jobweaver.sidecars.gitSync.image }}:{{ .Values.global.service.jobweaver.sidecars.gitSync.tag | default .Values.global.service.tag | default "latest" }}
          imagePullPolicy: {{ .Values.global.service.jobweaver.sidecars.gitSync.pullPolicy | default .Values.global.service.imagePullPolicy }}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          envFrom:
            - secretRef:
                name: {{ .Values.global.service.secretName | quote }}
          resources:
            {{- toYaml .Values.global.service.jobweaver.app.resources | default .Values.global.service.resources | nindent 12 }}
          volumeMounts:
            - name: git-sync
              mountPath: {{ .Values.global.service.jobweaver.app.gitSync.volumeRepoPath }}
            - name: dbt-artifacts
              mountPath: {{ .Values.global.service.jobweaver.app.dbt.dbtArtifactsDir }}
      volumes:
        - name: git-sync
          emptyDir:
            sizeLimit: 2Gi
        - name: dbt-logs-volume
          emptyDir:
            sizeLimit: 1Gi
        - name: dbt-artifacts
          emptyDir:
            sizeLimit: 1Gi
{{- end }}