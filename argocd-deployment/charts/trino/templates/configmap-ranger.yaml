# trino-ranger-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-ranger-properties
  labels:
    app: trino
    chart: trino-0.14.0
    release: trino
    heritage: Helm
    component: coordinator
data:
  access-control.properties: |
    access-control.name=ranger
    ranger.service.name=aqua
    
  ranger-trino-audit.xml: |
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration xmlns:xi="http://www.w3.org/2001/XInclude">
      <property>
        <name>xasecure.audit.is.enabled</name>
        <value>true</value>
        <description>Boolean flag to specify if the plugin should generate access audit logs. Default: true</description>
      </property>
    
      <property>
        <name>xasecure.audit.solr.is.enabled</name>
        <value>false</value>
        <description>Boolean flag to specify if audit logs should be stored in Solr. Default: false</description>
      </property>
    
      <property>
        <name>xasecure.audit.solr.solr_url</name>
        <value></value>
        <description>URL to Solr deployment where the plugin should send access audits to</description>
      </property>
    </configuration>

  ranger-trino-security.xml: |
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration xmlns:xi="http://www.w3.org/2001/XInclude">
      <property>
        <name>ranger.plugin.trino.policy.rest.url</name>
        <value>http://ranger-admin:6080</value>
        <description>MANDATORY: a comma separated list of URLs to Apache Ranger instances in a deployment</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.access.cluster.name</name>
        <value></value>
        <description>Name to identify the cluster running the Trino instance. This is recorded in audit logs generated by the plugin</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.use.rangerGroups</name>
        <value>false</value>
        <description>Boolean flag to specify whether user-to-groups mapping should be obtained from in Apache Ranger. Default: false</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.use.only.rangerGroups</name>
        <value>false</value>
        <description>Boolean flag. true: use only user-to-groups mapping from Apache Ranger; false: use user-to-groups mappings from Apache Ranger and Trino. Default: false</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.super.users</name>
        <value></value>
        <description>Comma separated list of user names. Superusers will be authorized for all accesses, without requiring explicit policy grants.</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.super.groups</name>
        <value></value>
        <description>Comma separated list of group names. Users in supergroups will be authorized for all accesses, without requiring explicit policy grants</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.ugi.initialize</name>
        <value>false</value>
        <description>Initialize the kerberos identity used to authenticate with Ranger admin server</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.ugi.login.type</name>
        <value></value>
        <description>Valid value: keytab</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.ugi.keytab.principal</name>
        <value></value>
        <description>Kerberos principal. Example: trino@EXAMPLE.COM</description>
      </property>
    
      <property>
        <name>ranger.plugin.trino.ugi.keytab.file</name>
        <value></value>
        <description>Location of keytab file. Example: /etc/trino/trino.keytab</description>
      </property>
    </configuration>