{{- if .Values.global.deploy.trino }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: trino-worker
  labels:
    app: trino
    chart: trino-0.14.0
    release: trino
    heritage: Helm
    component: worker
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: trino
      release: trino
      component: worker
  template:
    metadata:
      annotations:
        checksum/catalog-config: {{ toYaml (tpl (.Files.Get "configmap-catalog.yaml") .) | sha256sum }}
        checksum/additional-catalogs: {{ toYaml .Values.additionalCatalogs | sha256sum }}
#        checksum/secrets: {{ .Release.Namespace | printf "/platform-user-secrets" | sha256sum }}
      labels:
        app: trino
        release: trino
        component: worker
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: roles
                    operator: In
                    values:
                      - "fiber-aqua"
      serviceAccountName: trino
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: trino-worker
        - name: catalog-volume
          configMap:
            name: trino-catalog
        - name: schemas-volume
          configMap:
            name: trino-schemas-volume-worker
        - name: ranger-properties
          configMap:
            name: trino-ranger-properties   
      imagePullSecrets: []
      containers:
        - name: trino-worker
          image: "dview/trino:469"
          imagePullPolicy: Always
#          envFrom:
#            - secretRef:
#                name: platform-user-secrets
          env:
            - name: LAST_CHANGE_UPDATED
              value: {{ .Values.currentTimeStamp }}
            - name: RANGER_ENABLED
              value: "false"
            - name: RANGER_CONFIG_PATH
              value: /mnt/ranger/
            - name: TRINO_MOUNT_CONFIG_PATH
              value: /mnt/etc/trino
            - name: TRINO_CONFIG_PATH
              value: /etc/trino
            - name: AWS_ACCESS_KEY
              value: null
            - name: accessKey
              value: null
            - name: secretKey
              value: null
            - name: AWS_SECRET_KEY
              value: null
            - name: TRINO_RANGER_CONFIG_PATH
              value: /mnt/ranger/config  
            - name: RDS_JDBC_PWD
              value: {{ .Values.mysql.password }}
#            - name: MONGO_JDBC_URL
#              valueFrom:
#                secretKeyRef:
#                  key: MONGO_JDBC_URL
#                  name: fiber-dev
          volumeMounts:
            - mountPath: /tmp/trino-cache
              name: cache-volume
            - mountPath: /mnt/ranger/config
              name: ranger-properties
            - mountPath: /mnt/etc/trino
              name: config-volume
            - mountPath: /mnt/etc/trino/catalog
              name: catalog-volume
            - mountPath: /mnt/etc/trino/schemas
              name: schemas-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          resources: {}
{{- end }}